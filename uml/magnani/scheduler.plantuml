@startuml

interface SchedulerCommand {
	+ execute(): void
}

interface Scheduler<T> {
	+ addSchedule(Schedule<T>)
	+ removeSchedule(?)
	+ getSchedules(): Set<Schedule<T>>
	+ checkSchedule(time, param)
}

interface TemperatureCommands {
	+ SchedulerCommand doHeat()
	+ SchedulerCommand stopAll()
	+ SchedulerCommand doCool()
}

class TemperatureScheduler<Temperature> implements Scheduler {
	+ TemperatureScheduler(TemperatureCommands)
}

interface Schedule {
	+ checkSchedule(time, param)
}

class ScheduleImpl<T> implements Schedule {
	' // - timeConstraints: Set<Predicate<LocalTime>>
	' // - paramConstraints: Set<Predicate<T>>
	- constraints: Set<Pair<Predicate<LocalTime>, Bounds<T>>>
	- commands: Set<BiConsumer<T>>
}

@enduml
